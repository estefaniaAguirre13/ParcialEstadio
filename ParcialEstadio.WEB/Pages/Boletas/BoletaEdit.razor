@page "/boletas/edit/{Id:int}"

@using CurrieTechnologies.Razor.SweetAlert2;
@using ParcialEstadio.Shared.Entities;
@using Web.Repositories;
@inject NavigationManager navigationManager
@inject IRepository repository
@inject SweetAlertService sweetAlertService

<h3>Escoger Porteria</h3>

<BoletaForm @ref="boletaForm" Boleta="Boletas" OnValidSubmit="Edit" ReturnAction="Return" />

@code {
    private Boleta? Boletas;
    private BoletaForm? boletaForm;

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var responseHTTP = await repository.Get<Boleta>($"api/estadio/{Id}");

        if (responseHTTP.Error)
        {
            if (responseHTTP.HttpResponseMessage.StatusCode == System.Net.HttpStatusCode.NotFound)
            {
                navigationManager.NavigateTo("/");
            }
            else
            {
                var messageError = await responseHTTP.GetErrorMessageAsync();
                await sweetAlertService.FireAsync("Error", messageError, SweetAlertIcon.Error);
            }
        }
        else
        {
            Boletas = responseHTTP.Response;
        }
    }

    private async Task Edit()
    {
        Boletas!.Usada = true;
        Boletas.FechaUso = DateTime.Now;
        var responseHTTP = await repository.Put("api/estadio", Boletas);

        if (responseHTTP.Error)
        {
            var mensajeError = await responseHTTP.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", mensajeError, SweetAlertIcon.Error);
            return;
        }
        else
        {
            boletaForm!.FormPostedSuccessfully = true;
            navigationManager.NavigateTo("/");
        }
    }

    private void Return()
    {
        boletaForm!.FormPostedSuccessfully = true;
        navigationManager.NavigateTo("/");
    }
}